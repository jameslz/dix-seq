#!/usr/bin/perl -w

use strict;
use warnings;
use File::Basename;
use Cwd 'abs_path';

die "Usage:perl $0 <metadata>" if(@ARGV != 1);

my ($config )       = @ARGV;

my %metadata        = ();
profile();

my $project_home    =  abs_path($metadata{project_home}) . qq{/$metadata{project_id}/core};

my $distmx          =  qq{$project_home/distmx};
my $runs            =  qq{$project_home/runs};
my $report          =  qq{$project_home/report};
 
my $datasets        =  abs_path($metadata{project_home}) . qq{/$metadata{project_id}/classify/zotus};

my $utils           =  dirname( abs_path($0) ) . '/../utils';
my $binaries        =  dirname( abs_path($0) ) . '/../binaries';

my  $dry_run        =  0;
    $dry_run        =  1 if(exists $metadata{dry_run} && $metadata{dry_run} eq 'T');

submit();

exit;

sub profile {

    open( PROFILE,  $config ) || die "[ERR]: can't open $config $!\n";
    while(<PROFILE>){
       
        $_ =~ s/\s+$//;  
        next if(/^#/ || !/^\S+/);
        my ($key, $value)  = split /\s+/, $_, 2;
        $metadata{ $key } = $value;
    
    } 
    close PROFILE;

}

sub submit {
    
    make_fs();
    core_run();    

}

sub make_fs {
    
    my $cmd = qq{mkdir -p $runs         \
                          $report       \
                          $distmx};
       $cmd =~ s/\s+\n\s+/ /msg;
    system $cmd;

}

sub core_run {

    my $sh = qq{$runs/core.sh};
    open(EXPORT, qq{>$sh} ) || die "[ERR]: can't open $sh $!";

    print EXPORT calc_distmx();
    print EXPORT taxonomy();
    print EXPORT otutab_core();

    close EXPORT;
    system qq{cat $sh | $binaries/gargs -v --nlines 1 -p 1 "{}"\n} if(!$dry_run);

}

sub calc_distmx {
 
  my $cmd   = qq{usearch                                          \
                    -calc_distmx $datasets/zotus.fasta            \
                    -tabbedout $distmx/distmx.txt                 \
                    -maxdist 0.2 -termdist 0.3  ;\n};
     
     $cmd   =~ s/\s+\n\s+/ /msg;
  return  $cmd;

}

sub taxonomy {
 
  my $cmd   = qq{perl -ane 'next if\(\$#F != 3\); print'         \
                    $datasets/classify.txt                       \
               >$report/classify.txt ;\n};
     $cmd   =~ s/\s+\n\s+/ /msg;
  return  $cmd;

}

sub otutab_core {

  my $cmd   = qq{usearch                                         \
                    -otutab_core $datasets/zotu_table_norm.txt   \
                    -distmxin $distmx/distmx.txt                 \
                    -sintaxin $report/classify.txt               \
                    -tabbedout $report/core.txt;\n};
     $cmd   =~ s/\s+\n\s+/ /msg;
  return  $cmd;

}
